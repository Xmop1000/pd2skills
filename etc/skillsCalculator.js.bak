app.factory('skillsCalculator', [
	'$http',
	'HashStorage',
	'InfamyStorage',

function($http, HashStorage, InfamyStorage) {

	var file = 'skills/config.json';
	var instance = null;

	init();


	// ================================================================
	// = Init
	// ================================================================
	
	function init() {
		instance = new SkillsCalculator();
		loadFiles(file);
	}

	function loadFiles(file) {
		
		$http.get(file).success(function(config) {
			
			var files	= config.files;
			
			// 複製陣列
			var temp	= files.slice(0);
			var counter	= files.length;
			
			files.forEach(function(file, index) {
				$http.get(file).success(function(data) {
					temp[index] = data;
					
					counter--;
					if (counter == 0) afterLoad(temp, config);
				});
			});

		}); // end $http get
	
	}

	function afterLoad(trees, config) {
		// 初始階級設定資料
		initTierConfig(trees, config);

		// 建構計算機物件
		var newInstance = new SkillsCalculator(trees);
		
		// 載入惡名
		HashStorage.updateInfamy(InfamyStorage.infamyStatus);
		InfamyStorage.update(newInstance);
		
		// 載入Hash技能資料
		HashStorage.setupSkillsCalculator(newInstance);
		newInstance.updateStatus();

		// 存入命名空間
		instance = newInstance;
	}

	/**
	 * 設定階層訊息
	 */
	function initTierConfig(trees, treeConfig) {
		trees.forEach(function(tree) {
			tree.tiers.forEach(function(tier) {
				var info = treeConfig.tierinfo[tier.tier];
				for (var attr in info) {
					tier[attr] = info[attr];
				}
			});
		});
	}


	// ================================================================
	// = Methods
	// ================================================================

	function getInstance() {
		return instance;
	}

	return {'getInstance': getInstance};
}]);
